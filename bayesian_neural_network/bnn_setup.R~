
# Download and load MNIST dataset
mnist = getDataset("mnist")
# Build dataset list and testset list
dataset = list("X" = mnist$train$images, "y" = mnist$train$labels)
testset = list("X" = mnist$test$images, "y" = mnist$test$labels)


# Sample initial weights from standard Normal
d = ncol(dataset$X) # dimension of chain
params = list()
params$A = matrix( rnorm(10*100), ncol = 10 )
params$B = matrix(rnorm(d*100), ncol = 100)
# Sample initial bias parameters from standard Normal
params$a = rnorm(10)
params$b = rnorm(100)
# Sample initial precision parameters from standard Gamma
params$lambdaA = rgamma(1, 1)
params$lambdaB = rgamma(1, 1)
params$lambdaa = rgamma(1, 1)
params$lambdab = rgamma(1, 1)


# Save output
lookupSave = function(output, method, jobID) {
    outdir = paste0("../../data/output/bnn/", method, "/", jobID,"/")
    dir.create(outdir, showWarnings = F, recursive = T)
    params = c("A", "B", "a", "b", "lambdaA", "lambdaB","lambdaa","lambdab")
    for (param in params) {
        paramOut = output[[param]]
        write.table(paramOut, paste0(outdir, param), row.names = F, col.names = F)
    }
}

#Save timings
saveTime = function(output, method, jobID) {
    outdir = paste0("../../data/output/bnn/", method,"/")
    dir.create(outdir, showWarnings = F, recursive = T)
    write.csv(output, paste0(outdir, jobID,"_time.csv"))
}
